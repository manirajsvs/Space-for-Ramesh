---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-system

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aws-load-balancer-controller
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aws-load-balancer-controller
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aws-load-balancer-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aws-load-balancer-controller
subjects:
  - kind: ServiceAccount
    name: aws-load-balancer-controller
    namespace: kube-system

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: aws-load-balancer-controller
#   namespace: kube-system
# spec:
#   selector:
#     matchLabels:
#       app.kubernetes.io/name: aws-load-balancer-controller
#   replicas: 2
#   template:
#     metadata:
#       labels:
#         app.kubernetes.io/name: aws-load-balancer-controller
#     spec:
#       serviceAccountName: aws-load-balancer-controller
#       containers:
#         - name: aws-load-balancer-controller
#           image: docker.io/amazon/aws-alb-ingress-controller:v2.3.0
#           imagePullPolicy: IfNotPresent
#           args:
#             - --ingress-class=alb
#             - --cluster-name=cicd-k8s-portal-dev-cluster
#             - --aws-vpc-id=vpc-0082290a201c78b7b
#           env:
#             - name: AWS_REGION
#               value: us-east-1


